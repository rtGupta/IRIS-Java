/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Paramedics;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.FirstResponder.EMTOrganization;
import Business.Organization.FirstResponder.FireOrganization;
import Business.Organization.FirstResponder.LawEnforcementOrganization;
import Business.Organization.HealthCare.NonClinicalOrganization;
import Business.Organization.Organization;
import Business.Role.HealthCare.StaffAdministrator;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import Util.DropdownItem;
import Util.MapsUtil;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;

/**
 *
 * @author akshatajadhav
 */
public class HospitalTransferJPanel extends javax.swing.JPanel {

    JLayeredPane mainPane;
    JLayeredPane workPane;
    private EcoSystem system;
    private UserAccount userAccount;
    private WorkRequest paramedicWorkRequest;
    List<double[]> hospitalLocations;

    /**
     * Creates new form HospitalTransferJPanel
     */
    public HospitalTransferJPanel(JLayeredPane mainPane, JLayeredPane workPane, EcoSystem system, UserAccount account, WorkRequest request) {
        initComponents();
        this.mainPane = mainPane;
        this.workPane = workPane;
        this.system = system;
        this.userAccount = account;
        this.paramedicWorkRequest = request;
        hospitalLocations = new ArrayList<>();
        loadHospitalDropdown();
        JPanel map = MapsUtil.publishHospitalMap(this.paramedicWorkRequest.getCaller().getCoordinates(), hospitalLocations);
        displayPanel(maps, map);
    }

    private void loadHospitalDropdown() {
        for (Network network : system.getNetworkList()) {
            Enterprise hcEnterprise = network.getEnterpriseDirectory()
                    .findEnterprise(Enterprise.EnterpriseType.HealthcareEnterprise.getValue());
            for (Organization org : hcEnterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof NonClinicalOrganization) {
                    this.loadValues(org, hospitalDropdown, hospitalLocations);
                }
            }
        }
    }

    private void loadValues(Organization org, JComboBox<UserAccount> drpdown, List<double[]> p) {
        for (UserAccount acc : org.getUserAccountDirectory().getUserAccountList()) {
//            System.out.println(paramedicAccount.getUsername());
            drpdown.addItem(acc);
            p.add(acc.getProfileDetails().getLocation());
        }
    }
    
    public void displayPanel(JLayeredPane lpane, JPanel panel) {
        lpane.removeAll();
        lpane.add(panel);
        lpane.repaint();
        lpane.revalidate();
        JFrame parentFrame = (JFrame) SwingUtilities.getRoot(mainPane);
        parentFrame.pack();
        parentFrame.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        maps = new javax.swing.JLayeredPane();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        hospitalDropdown = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(990, 590));
        setMinimumSize(new java.awt.Dimension(990, 590));
        setPreferredSize(new java.awt.Dimension(990, 590));

        jPanel2.setPreferredSize(new java.awt.Dimension(0, 1));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 990, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 2, Short.MAX_VALUE)
        );

        maps.setLayout(new java.awt.CardLayout());

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        jLabel1.setText("Hospital:");

        hospitalDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hospitalDropdownActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Transfer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(maps)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(360, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(hospitalDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(jButton2)))
                        .addGap(297, 297, 297))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 990, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(maps, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hospitalDropdown)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(52, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 588, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hospitalDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hospitalDropdownActionPerformed
        paramedicWorkRequest.setReceiver((UserAccount) hospitalDropdown.getSelectedItem());
    }//GEN-LAST:event_hospitalDropdownActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        paramedicWorkRequest.setStatus("Transferred to Hospital");
        // set status of WR in sender's workqueue as well.
        paramedicWorkRequest.getSender().getWorkQueue().findWorkRequestByID(paramedicWorkRequest.getWorkRequestID()).setStatus("Transferred to Hospital");
        paramedicWorkRequest.getReceivers().forEach(receiver -> {
            if (receiver.getRole() instanceof StaffAdministrator) {
                receiver.getWorkQueue().getWorkRequestList().add(paramedicWorkRequest);
            } else {
                receiver.getWorkQueue().findWorkRequestByID(paramedicWorkRequest.getWorkRequestID()).setStatus("Transferred to Hospital");
            }
        });
        userAccount.getWorkQueue()
                        .findWorkRequestByID(paramedicWorkRequest.getWorkRequestID()).setStatus("Transferred to Hospital");
        // display Paramedic's HomeJPanel.
//        HomeJPanel phjp = new HomeJPanel(mainPane, workPane, system, userAccount);
//        displayPanel(workPane, phjp);
        
        ParamedicHistoryJPanel php = new ParamedicHistoryJPanel(mainPane, workPane, system, userAccount);
        displayPanel(workPane, php);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JPanel map = MapsUtil.publishHospitalMap(this.paramedicWorkRequest.getCaller().getCoordinates(), hospitalLocations);
        displayPanel(maps, map);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox hospitalDropdown;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLayeredPane maps;
    // End of variables declaration//GEN-END:variables
}
